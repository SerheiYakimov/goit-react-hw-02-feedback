{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFedback","className","map","el","name","onClick","Section","title","children","Notification","message","defaultProps","App","state","handleClick","e","currentTarget","console","log","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAEO,SAASA,EAAT,GAAuE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBAChD,OACK,gCACG,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,kDAAqBC,EAArB,UCLT,SAASC,EAAT,GAAuD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,eAEvC,OACI,qBAAKC,UAAU,WAAf,SACKF,EAAQG,KAAI,SAACC,GAAD,OACX,wBAEEC,KAAMD,EACRE,QAASL,EAHT,SAIKG,GAHEA,QCRd,SAASG,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC7B,OACI,oCACI,6BAAKD,IACJC,KCJN,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC3B,OACI,4BAAIA,IHYZlB,EAAWmB,aAAe,CACxBlB,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,G,IIZhBe,E,4MAEJC,MAAQ,CACRpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGLmB,YAAc,SAACC,GACb,IAAMX,EAAOW,EAAEC,cAAcZ,KAC7Ba,QAAQC,IAAId,GACZ,EAAKe,UAAS,SAAAC,GAAS,sBACpBhB,EAAOgB,EAAUhB,GAAQ,O,EAK9BiB,mBAAqB,WACnB,MAA+B,EAAKR,MAEpC,OAFA,EAAQpB,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzB2B,gCAAkC,WAEhC,OAD2BC,KAAKC,MAAO,EAAKX,MAAMpB,KAAO,EAAK4B,qBAAwB,M,4CAIxF,WACE,MAA+BI,KAAKZ,MAA5BpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,sBAAKM,UAAU,MAAf,UACE,cAACK,EAAD,CAASC,MAAM,wBAAf,SACE,cAACT,EAAD,CACAC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,eAAgByB,KAAKX,gBAErBW,KAAKJ,qBAAuB,EAC5B,cAACf,EAAD,CAASC,MAAM,aAAf,SACE,cAACf,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,KAAKJ,qBACZxB,mBAAoB4B,KAAKH,sCAE3B,cAACb,EAAD,CAAcC,QAAQ,6B,GA/ChBgB,aAuDHd,IC1Dfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4d107ec6.chunk.js","sourcesContent":["import propTypes from 'prop-types';\n\nexport function Statistics ({good, neutral, bad, total, positivePercentage}) {\n        return (\n            (<div>\n                <p>Good:{good}</p>\n                <p>Neutral:{neutral}</p>\n                <p>Bad:{bad}</p>\n                <p>Total:{total}</p>\n                <p>PositiveFeedback:{positivePercentage}%</p>\n            </div>)\n                \n        )\n\n}\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: 0,\n};\n\nStatistics.propTypes = {\n    good: propTypes.number,\n    neutral: propTypes.number,\n    bad: propTypes.number,\n    total: propTypes.number,\n    positivePercentage: propTypes.number\n}\n","\n// import styles from './FeedbackOptions.module.css';\nimport propTypes from 'prop-types';\n\nexport function FeedbackOptions({ options, onLeaveFedback }) {\n    \n    return (\n        <div className=\"feedback\">\n            {options.map((el) => (\n              <button\n                key={el}\n                name={el}\n              onClick={onLeaveFedback}>\n                  {el}\n              </button>\n          ))}\n        </div>\n    );\n}\n\nFeedbackOptions.propTypes = {\n    options: propTypes.array,\n    onLeaveFedback: propTypes.func,\n}\n    \n\n\n","import propTypes from 'prop-types';\n\nexport function Section({ title, children }) {\n    return (\n        <section>\n            <h2>{title}</h2>\n            {children}\n        </section>\n    )\n}\n\nSection.propTypes = {\n    title: propTypes.string.isRequired,\n    children: propTypes.element.isRequired,\n}","import propTypes from 'prop-types';\n\nexport function Notification({ message }) {\n    return (\n        <p>{message}</p>\n    )\n}\n\nNotification.propTypes = {\n    message: propTypes.string,\n}","\nimport './App.css';\nimport { Component } from 'react';\nimport { Statistics } from './components/Statistics/Statistics';\nimport { FeedbackOptions } from './components/FeedbackOptions/FeedbackOptions';\nimport { Section } from './components/Section/Section';\nimport { Notification } from './components/Notification/Notification';\n\n\nclass App extends Component {\n\n  state = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n  }\n\n  handleClick = (e) => {\n    const name = e.currentTarget.name;\n    console.log(name);\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n  \n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const totalValue = good + neutral + bad;\n    return totalValue;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const positivePersentage = Math.round((this.state.good / this.countTotalFeedback()) * 100);\n    return positivePersentage;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    \n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFedback={this.handleClick}/>\n        </Section>\n        { this.countTotalFeedback() > 0 ?\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()} />\n          </Section>\n          : <Notification message=\"No feedback given\" />\n        }\n      </div>\n  );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}